class registrationform(FlaskForm):
    first_name = StringField('first name')
    last_name = StringField('last name')
    age = StringField('age')
    submit = SubmitField('sign up')


@app.route('/sign_up', methods=['GET', 'POST']) 
#@app.route('/home', methods=['GET', 'POST'])
def sign_up():
    error=""
    form=registrationform()
    #this ensures the data from the website is transmitted to database 
    if(request.method=='POST'):
        firstname=form.first_name.data
        lastname=form.last_name.data
        age = form.age.data
        #this doesnt let the fields be empty 
        if len(firstname) == 0 or len(lastname) == 0 or len(age) == 0:
            error="please fill in all fields"
        else:
        
                new_player = models.player_reg(first_name=firstname, last_name=lastname, age=age)
                db.session.add(new_player)
                db.session.commit()

# json={"s2_numbers":s2_numbers,"s3_letters":s3_letters}).text


#secretkey for forms
app.config['SECRET_KEY'] = 'qwerty123'

"mysql+pymysql://root:qwerty123@34.89.15.126/generator"

jenk- c59fb57c75c54cec9842f8dbe38c2828

pipeline {
    agent any
    environment{
        DATABASE_URI = credentials('DATABASE_URI')
        docker_hub_credentials = credentials('docker-hub-credentials')
    }
    stages{
        stage('Test'){
            steps{
                dir("micro-services"){
                sh 'bash test.sh'
            }

            
        }
        stage('Build'){
            steps{
                dir("micro-services"){
                sh 'docker-compose build '
            }

            
        }
        stage('Push'){
            steps{
                dir("micro-services"){
                sh "docker login -u ${env.docker_hub_credentials_USR} -p ${env.docker_hub_credentials_PSW}"
                sh 'docker ps'
                sh 'docker-compose push'
            }

            


        }
        stage('config and Set Swarm'){
            steps{
                dir("micro-services/ansible"){
                 sh 'ansible-playbook -i inventory.yaml playbook.yaml'
             }
            
        }
        stage('Deploy'){
            steps{
                sh 'docker stack deploy --compose-file docker-compose.yaml'
                sh 'docker stack services'
            }

        }
    }
}